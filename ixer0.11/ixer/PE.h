//////////////////////////////////////////////////////////////////////////
// PE.h

#ifndef	___PE___
#define ___PE___


#define NT_SUCCESS(Status) ((NTSTATUS)(Status) >= 0)
typedef LONG NTSTATUS;
#define ibaseDD *(PDWORD)&ibase

///////////////////////////////////////////////////////////////////////////////////
//
//	功能实现：解析PE文件，获取PE结构中各个头的指针
//	输入参数：ibase为映像基地址；
//			  pfh,poh,psh分别为IMAGE_FILE_HEADER，IMAGE_OPTIONAL_HEADER，
//			  IMAGE_SECTION_HEADER的指针
//	输出参数：返回TRUE表示获取成功，否则失败
//
///////////////////////////////////////////////////////////////////////////////////
DWORD GetHeaders(PCHAR ibase,
				 PIMAGE_FILE_HEADER *pfh,
				 PIMAGE_OPTIONAL_HEADER *poh,
				 PIMAGE_SECTION_HEADER *psh);

//////////////////////////////////////////////////////////////////////////////////
//
//	功能实现：将指定的RVA地址转换成相对文件的偏移
//	输入参数：Base是文件加载的基地址;
//			  RVA是要获取文件偏移的RVA地址
//	输出参数：返回DWORD类型的相对文件的偏移量
//
///////////////////////////////////////////////////////////////////////////////////
DWORD	RVAToFileOffset(PCHAR	Base,DWORD	RVAAddress);

///////////////////////////////////////////////////////////////////////////////////
//
//	功能实现：获取指定文件中的指定节的指针
//	输入参数：ImagePath为要获取指定节指针的映像路径
//			  FindSetionName为要查找的节名
//			  ImageBase为返回的映像的默认加载基地址;
//			  pFile为存放内存映像的缓冲区地址;
//	输出参数：返回指向指定节数据的指针
//
///////////////////////////////////////////////////////////////////////////////////
PCHAR	
GetSettionPoint(PCHAR	ImagePath,PCHAR FindSetionName,PDWORD	ImageBase,PCHAR*	pFile);

//////////////////////////////////////////////////////////////////////////////////
//
//	功能实现：获取指定PE文件中指定函数的导出地址
//	输入参数：Base为PE文件加载的基地址
//			  FindFunName为要查找的函数名
//			  NameLength为函数名长度
//	输出参数：返回指定函数名的函数首地址
//
///////////////////////////////////////////////////////////////////////////////////
DWORD	
FindFunAddress(DWORD	Base,PCHAR	FindFunName,DWORD	NameLength);



//////////////////////////////////////////////////////////////////////////
#endif
